const core = require('@actions/core');
const github = require('@actions/github');

let octokit;

async function execAction() {
  try {
    const sourceBranch = core.getInput('source_branch', {required: true });
    const targetBranch = core.getInput('target_branch', {required: true });
    const githubToken = core.getInput('github_token', {required: true });
    const label = core.getInput('label');

    console.log(`Merge from ${sourceBranch} into ${targetBranch}`);
    
    const prName = `Autogenerated - Merge from ${sourceBranch} into ${targetBranch}`;

    core.setOutput("pr_name", prName);

    octokit = new github.getOctokit(githubToken);

    const [owner, repo] = process.env.GITHUB_REPOSITORY.split("/");

    console.log(owner);
    console.log(repo);

    const { data: pullRequest } = await octokit.rest.pulls.create({
      owner,
      repo,
      head: sourceBranch,
      base: targetBranch,
      title: prName
    });

    addLabel(owner, repo, pullRequest.number, label);

    console.log('Created pr data:');
    console.dir(pullRequest);

    const payload = JSON.stringify(github.context.payload, undefined, 2);
    console.log(`The event payload: ${payload}`);
  }
  catch (error) {
    core.setFailed(error.message);
  }
}

function addLabel(owner, repo, issue_number, label) {
    // Create label

    var { data: existingLabel } = octokit.rest.issues.getLabel({
      owner,
      repo,
      name: label,
    });

    console.log('Found label: ');
    console.dir(existingLabel);

    if (!existingLabel) {
      octokit.rest.issues.createLabel({
        owner,
        repo,
        name: label,
        color: '27ff28',
        description: 'Pull requests marked with this label will be auto merged on approval'
      })
    }

    // Add to pr
    if (label) {
      console.log(`Adding label: ${label}`)
      octokit.rest.issues.addLabels({
        owner,
        repo,
        issue_number,
        labels: [label]
      });
    }
}

execAction();