# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main-old" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
      - name: Sync branches
        # You may pin to the exact commit or the version.
        # uses: TreTuna/sync-branches@ea58ab6e406fd3ad016a064b31270bbb41127f41
        uses: TreTuna/sync-branches@1.4.0
        with:
          # Branch from make pull-request from
          FROM_BRANCH: main
          # Branch to make the pull-request against
          TO_BRANCH: develop
          # What you would like as the title of the pull request. Default: 'sync: {FROM_BRANCH} to {TO_BRANCH}'
          PULL_REQUEST_TITLE: SynsMasterAndDevelop
          # What you would like in the body of the pull request. Default: 'New code has just landed in {fromBranch} so let's bring {toBranch} up to speed!'
          PULL_REQUEST_IS_DRAFT: false
          # Set to 'true' to force checking content comparison between the branches. Default: 'false'
          CONTENT_COMPARISON: true